services:
  database:
    image: postgis/postgis:13-3.2
    volumes:
      - db_data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: "directus"
      POSTGRES_PASSWORD: "directus"
      POSTGRES_DB: "directus"
    healthcheck:
      test: [ "CMD", "pg_isready", "--host=localhost", "--username=directus" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_interval: 5s
      start_period: 30s

  cache:
    image: redis:6
    healthcheck:
      test: [ "CMD-SHELL", "[ $$(redis-cli ping) = 'PONG' ]" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_interval: 5s
      start_period: 30s

  directus:
    image: directus/directus:11.1.0
    volumes:
      - ./uploads:/directus/uploads
      - ./extensions:/directus/extensions
    depends_on:
      database:
        condition: service_healthy
      cache:
        condition: service_healthy
    environment:
      SECRET: "you_secret_key"
      DB_CLIENT: "pg"
      DB_HOST: "database"
      DB_PORT: "5432"
      DB_DATABASE: "directus"
      DB_USER: "directus"
      DB_PASSWORD: "directus"
      CACHE_ENABLED: "true"
      CACHE_AUTO_PURGE: "true"
      CACHE_STORE: "redis"
      REDIS: "redis://cache:6379"
      ADMIN_EMAIL: "rupeshreddynagolu@gmail.com"
      ADMIN_PASSWORD: "Rupesh@7093"

  nginx:
    image: nginx:latest
    ports:
      - "80:80" # HTTP
      - "443:443" # HTTPS
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - directus

  # remove this production
  ngrok:
    image: wernight/ngrok
    command: ngrok http nginx:80
    environment:
      - NGROK_AUTHTOKEN= authtoken
      - NGROK_PORT=nginx:80
      # - NGROK_REGION=Global
      # - NGROK_DOMAIN=close-enormously-anemone.ngrok-free.app
    ports:
      - "4040:4040" # Access Ngrok dashboard to monitor traffic
    depends_on:
      - nginx
    

volumes:
  db_data:
